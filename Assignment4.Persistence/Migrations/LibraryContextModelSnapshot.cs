// <auto-generated />
using System;
using Assignment4_LibraryManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Assignment4.Persistence.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Assignment4_LibraryManagementSystem.Models.Book", b =>
                {
                    b.Property<int>("Bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bookid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bookid"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("author");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("isbn");

                    b.Property<int>("Publicationyear")
                        .HasColumnType("integer")
                        .HasColumnName("publicationyear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Bookid")
                        .HasName("book_pkey");

                    b.ToTable("book");
                });

            modelBuilder.Entity("Assignment4_LibraryManagementSystem.Models.Borrow", b =>
                {
                    b.Property<int>("Borrowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("borrowid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Borrowid"));

                    b.Property<int?>("Bookid")
                        .HasColumnType("integer")
                        .HasColumnName("bookid");

                    b.Property<DateOnly?>("Dateofborrow")
                        .HasColumnType("date")
                        .HasColumnName("dateofborrow");

                    b.Property<DateOnly?>("Dateofreturn")
                        .HasColumnType("date")
                        .HasColumnName("dateofreturn");

                    b.Property<DateOnly?>("Deadlinereturn")
                        .HasColumnType("date")
                        .HasColumnName("deadlinereturn");

                    b.Property<int?>("Userid")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("Borrowid")
                        .HasName("borrow_pkey");

                    b.HasIndex("Bookid");

                    b.HasIndex("Userid");

                    b.ToTable("borrow");
                });

            modelBuilder.Entity("Assignment4_LibraryManagementSystem.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Userid"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fname");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lname");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sex");

                    b.HasKey("Userid")
                        .HasName("User_pkey");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Assignment4_LibraryManagementSystem.Models.Borrow", b =>
                {
                    b.HasOne("Assignment4_LibraryManagementSystem.Models.Book", "Book")
                        .WithMany("Borrows")
                        .HasForeignKey("Bookid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("borrow_bookid_fkey");

                    b.HasOne("Assignment4_LibraryManagementSystem.Models.User", "User")
                        .WithMany("Borrows")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("borrow_userid_fkey");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Assignment4_LibraryManagementSystem.Models.Book", b =>
                {
                    b.Navigation("Borrows");
                });

            modelBuilder.Entity("Assignment4_LibraryManagementSystem.Models.User", b =>
                {
                    b.Navigation("Borrows");
                });
#pragma warning restore 612, 618
        }
    }
}
